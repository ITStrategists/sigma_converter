        {{ 
            config(
                materialized='view',
                ) 
        }}

        --these need to change by converter

        {{ config(schema = "sigma_its_sig") }}
        {{ config(alias = "order_items") }}


         SELECT ID, INVENTORY_ITEM_ID, USER_ID, ORDER_ID, CASE WHEN date_part('year',created_at) = date_part('year',current_date) AND created_at < CURRENT_DATE THEN 'This Year to Date' WHEN date_part('year',created_at) + 1 = date_part('year',current_date) AND date_part('dayofyear',created_at) <= date_part('dayofyear',current_date) THEN 'Last Year to Date' END AS REPORTING_PERIOD, datediff('day',created_at,CURRENT_DATE) AS DAYS_SINCE_SOLD, STATUS, CASE WHEN status = 'Processing' THEN DATEDIFF('day',created_at,CURRENT_DATE())*1.0 WHEN status IN ('Shipped', 'Complete', 'Returned') THEN DATEDIFF('day',created_at,shipped_at)*1.0 WHEN status = 'Cancelled' THEN NULL END AS DAYS_TO_PROCESS, datediff('day',shipped_at,delivered_at)*1.0 AS SHIPPING_TIME, SALE_PRICE, (CASE WHEN returned_at IS NOT NULL THEN TRUE ELSE FALSE END) AS IS_RETURNED, (TIMESTAMPDIFF(DAY, created_at , delivered_at) + CASE WHEN TIMESTAMPDIFF(SECOND, TO_DATE(created_at), delivered_at) = TIMESTAMPDIFF(SECOND, TO_DATE(created_at ), delivered_at ) THEN 0 WHEN TIMESTAMPDIFF(SECOND, TO_DATE(created_at), delivered_at) < TIMESTAMPDIFF(SECOND, TO_DATE(created_at ), delivered_at ) THEN CASE WHEN created_at < delivered_at THEN -1 ELSE 0 END ELSE CASE WHEN created_at > delivered_at THEN 1 ELSE 0 END END) AS TO_DELIVERY_DAY, CASE WHEN TIMESTAMPDIFF(SECOND, created_at , delivered_at) / (60*60) < 0 THEN CEIL(TIMESTAMPDIFF(SECOND, created_at , delivered_at) / (60*60)) ELSE FLOOR(TIMESTAMPDIFF(SECOND, created_at , delivered_at) / (60*60)) END AS TO_DELIVERY_HOUR, CASE WHEN TIMESTAMPDIFF(SECOND, created_at , delivered_at) / 60 < 0 THEN CEIL(TIMESTAMPDIFF(SECOND, created_at , delivered_at) / 60) ELSE FLOOR(TIMESTAMPDIFF(SECOND, created_at , delivered_at) / 60) END AS TO_DELIVERY_MINUTE, (TIMESTAMPDIFF(MONTH, created_at , delivered_at) + CASE WHEN TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', delivered_at), delivered_at) = TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', created_at ), created_at ) THEN 0 WHEN TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', delivered_at), delivered_at) < TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', created_at ), created_at ) THEN CASE WHEN created_at < delivered_at THEN -1 ELSE 0 END ELSE CASE WHEN created_at > delivered_at THEN 1 ELSE 0 END END) AS TO_DELIVERY_MONTH, CASE WHEN (TIMESTAMPDIFF(MONTH, created_at , delivered_at) + CASE WHEN TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', delivered_at), delivered_at) = TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', created_at ), created_at ) THEN 0 WHEN TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', delivered_at), delivered_at) < TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', created_at ), created_at ) THEN CASE WHEN created_at < delivered_at THEN -1 ELSE 0 END ELSE CASE WHEN created_at > delivered_at THEN 1 ELSE 0 END END) / 3 < 0 THEN CEIL((TIMESTAMPDIFF(MONTH, created_at , delivered_at) + CASE WHEN TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', delivered_at), delivered_at) = TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', created_at ), created_at ) THEN 0 WHEN TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', delivered_at), delivered_at) < TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', created_at ), created_at ) THEN CASE WHEN created_at < delivered_at THEN -1 ELSE 0 END ELSE CASE WHEN created_at > delivered_at THEN 1 ELSE 0 END END) / 3) ELSE FLOOR((TIMESTAMPDIFF(MONTH, created_at , delivered_at) + CASE WHEN TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', delivered_at), delivered_at) = TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', created_at ), created_at ) THEN 0 WHEN TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', delivered_at), delivered_at) < TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', created_at ), created_at ) THEN CASE WHEN created_at < delivered_at THEN -1 ELSE 0 END ELSE CASE WHEN created_at > delivered_at THEN 1 ELSE 0 END END) / 3) END AS TO_DELIVERY_QUARTER, TIMESTAMPDIFF(SECOND, created_at , delivered_at) AS TO_DELIVERY_SECOND, CASE WHEN (TIMESTAMPDIFF(DAY, created_at , delivered_at) + CASE WHEN TIMESTAMPDIFF(SECOND, TO_DATE(delivered_at), delivered_at) = TIMESTAMPDIFF(SECOND, TO_DATE(created_at ), created_at ) THEN 0 WHEN TIMESTAMPDIFF(SECOND, TO_DATE(delivered_at), delivered_at) < TIMESTAMPDIFF(SECOND, TO_DATE(created_at ), created_at ) THEN CASE WHEN created_at < delivered_at THEN -1 ELSE 0 END ELSE CASE WHEN created_at > delivered_at THEN 1 ELSE 0 END END) / 7 < 0 THEN CEIL((TIMESTAMPDIFF(DAY, created_at , delivered_at) + CASE WHEN TIMESTAMPDIFF(SECOND, TO_DATE(delivered_at), delivered_at) = TIMESTAMPDIFF(SECOND, TO_DATE(created_at ), created_at ) THEN 0 WHEN TIMESTAMPDIFF(SECOND, TO_DATE(delivered_at), delivered_at) < TIMESTAMPDIFF(SECOND, TO_DATE(created_at ), created_at ) THEN CASE WHEN created_at < delivered_at THEN -1 ELSE 0 END ELSE CASE WHEN created_at > delivered_at THEN 1 ELSE 0 END END) / 7) ELSE FLOOR((TIMESTAMPDIFF(DAY, created_at , delivered_at) + CASE WHEN TIMESTAMPDIFF(SECOND, TO_DATE(delivered_at), delivered_at) = TIMESTAMPDIFF(SECOND, TO_DATE(created_at ), created_at ) THEN 0 WHEN TIMESTAMPDIFF(SECOND, TO_DATE(delivered_at), delivered_at) < TIMESTAMPDIFF(SECOND, TO_DATE(created_at ), created_at ) THEN CASE WHEN created_at < delivered_at THEN -1 ELSE 0 END ELSE CASE WHEN created_at > delivered_at THEN 1 ELSE 0 END END) / 7) END AS TO_DELIVERY_WEEK, CASE WHEN (TIMESTAMPDIFF(MONTH, created_at , delivered_at) + CASE WHEN TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', delivered_at), delivered_at) = TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', created_at ), created_at ) THEN 0 WHEN TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', delivered_at), delivered_at) < TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', created_at ), created_at ) THEN CASE WHEN created_at < delivered_at THEN -1 ELSE 0 END ELSE CASE WHEN created_at > delivered_at THEN 1 ELSE 0 END END) / 12 < 0 THEN CEIL((TIMESTAMPDIFF(MONTH, created_at , delivered_at) + CASE WHEN TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', delivered_at), delivered_at) = TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', created_at ), created_at ) THEN 0 WHEN TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', delivered_at), delivered_at) < TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', created_at ), created_at ) THEN CASE WHEN created_at < delivered_at THEN -1 ELSE 0 END ELSE CASE WHEN created_at > delivered_at THEN 1 ELSE 0 END END) / 12) ELSE FLOOR((TIMESTAMPDIFF(MONTH, created_at , delivered_at) + CASE WHEN TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', delivered_at), delivered_at) = TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', created_at ), created_at ) THEN 0 WHEN TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', delivered_at), delivered_at) < TIMESTAMPDIFF(SECOND, DATE_TRUNC('month', created_at ), created_at ) THEN CASE WHEN created_at < delivered_at THEN -1 ELSE 0 END ELSE CASE WHEN created_at > delivered_at THEN 1 ELSE 0 END END) / 12) END AS TO_DELIVERY_YEAR, TO_CHAR(DATE_TRUNC('second',returned_at), 'YYYY-MM-DD HH24:MI:SS') AS RETURNED_TIME, TO_CHAR(TO_DATE(returned_at), 'YYYY-MM-DD') AS RETURNED_DATE, TO_CHAR(DATE_TRUNC('week', returned_at ), 'YYYY-MM-DD') AS RETURNED_WEEK, TO_CHAR(DATE_TRUNC('month',returned_at), 'YYYY-MM') AS RETURNED_MONTH, returned_at AS RETURNED_RAW, TO_CHAR(TO_DATE(shipped_at), 'YYYY-MM-DD') AS SHIPPED_DATE, TO_CHAR(DATE_TRUNC('week', shipped_at ), 'YYYY-MM-DD') AS SHIPPED_WEEK, TO_CHAR(DATE_TRUNC('month',shipped_at), 'YYYY-MM') AS SHIPPED_MONTH, shipped_at AS SHIPPED_RAW, TO_CHAR(TO_DATE(delivered_at), 'YYYY-MM-DD') AS DELIVERED_DATE, TO_CHAR(DATE_TRUNC('week', delivered_at ), 'YYYY-MM-DD') AS DELIVERED_WEEK, TO_CHAR(DATE_TRUNC('month',delivered_at), 'YYYY-MM') AS DELIVERED_MONTH, delivered_at AS DELIVERED_RAW, TO_CHAR(DATE_TRUNC('second',created_at), 'YYYY-MM-DD HH24:MI:SS') AS CREATED_TIME, TO_CHAR(DATE_TRUNC('hour', created_at ), 'YYYY-MM-DD HH24') AS CREATED_HOUR, TO_CHAR(TO_DATE(created_at), 'YYYY-MM-DD') AS CREATED_DATE, TO_CHAR(DATE_TRUNC('week', created_at ), 'YYYY-MM-DD') AS CREATED_WEEK, TO_CHAR(DATE_TRUNC('month',created_at), 'YYYY-MM') AS CREATED_MONTH, EXTRACT(YEAR FROM created_at)::integer AS CREATED_YEAR, CAST(EXTRACT(HOUR FROM CAST(created_at AS TIMESTAMP)) AS INT) AS CREATED_HOUR_OF_DAY, CASE TO_CHAR(created_at , 'DY') WHEN 'Tue' THEN 'Tuesday' WHEN 'Wed' THEN 'Wednesday' WHEN 'Thu' THEN 'Thursday' WHEN 'Sat' THEN 'Saturday' ELSE TO_CHAR(created_at , 'DY') || 'day' END AS CREATED_DAY_OF_WEEK, EXTRACT(MONTH FROM created_at )::integer AS CREATED_MONTH_NUM, created_at AS CREATED_RAW, EXTRACT(WEEK FROM created_at )::int AS CREATED_WEEK_OF_YEAR FROM PUBLIC.order_items 